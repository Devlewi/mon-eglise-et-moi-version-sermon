"use client";
import { useEffect, useState } from "react";

export default function Predictions() {
  const [predictions, setPredictions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    // Fonction pour récupérer les prédictions depuis l'API
    const fetchPredictions = async () => {
      setLoading(true);
      try {
        const token = localStorage.getItem("token"); // Récupérer le token depuis le localStorage
        console.log(token);
        if (!token) {
          setError("Non autorisé. Vous devez vous connecter.");
          return;
        }

        const response = await fetch("https://tplvictoire.coach-lewi.com/api/predications", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${token}`, // Ajouter le token dans l'en-tête Authorization
          },
        });

        const data = await response.json();
        console.log(data);

        // Mettez à jour avec la bonne structure des données
        if (data.data) {
          setPredictions(data.data); // Assurez-vous de bien extraire 'data' qui contient les prédictions
        } else {
          setError(data.message || "Erreur lors de la récupération des prédictions");
        }
      } catch (error) {
        setError("Erreur serveur : " + error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchPredictions();
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-lg text-gray-500">Chargement des prédictions...</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-100 flex items-center justify-center">
      <div className="w-full max-w-3xl p-6 bg-white rounded-lg shadow-lg">
        <h2 className="text-2xl font-bold mb-4">Prédictions</h2>

        {error && <div className="bg-red-500 text-white p-2 rounded mb-4">{error}</div>}

        <div>
          {predictions.length > 0 ? (
            <ul>
              {predictions.map((prediction, index) => (
                <li key={index} className="mb-4 p-4 border-b border-gray-200">
                  <h3 className="font-semibold">{prediction.label}</h3>
                  <p>Audio : <a href={prediction.audio_file} target="_blank" rel="noopener noreferrer">Écouter</a></p>
                  {/* Vous pouvez ajouter d'autres informations ici */}
                </li>
              ))}
            </ul>
          ) : (
            <p>Aucune prédiction disponible.</p>
          )}
        </div>
      </div>
    </div>
  );
}
